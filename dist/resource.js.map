{"version":3,"sources":["../server/resource.js"],"names":["resourceFieldType","category","name","address","phone","website","comments","created","isActive","cleanupResource","resource","cleanedUpResource","Object","keys","forEach","field","validateResource","errors","push","length","join","convertResource","Date","module","exports"],"mappings":"AAAA;;AACA,IAAMA,oBAAoB;AACtBC,cAAS,UADa;AAEtBC,UAAK,UAFiB;AAGtBC,aAAQ,UAHc;AAItBC,WAAM,UAJgB;AAKtBC,aAAQ,UALc;AAMtBC,cAAS,UANa;AAOtBC,aAAQ,UAPc;AAQtBC,cAAS;AARa,CAA1B;;AAWA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AAC/B,QAAMC,oBAAoB,EAA1B;AACAC,WAAOC,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,iBAAS;AACnC,YAAId,kBAAkBe,KAAlB,CAAJ,EAA8BJ,kBAAkBI,KAAlB,IAA2BL,SAASK,KAAT,CAA3B;AACjC,KAFD;AAGA,WAAOJ,iBAAP;AACH;;AAED,SAASK,gBAAT,CAA0BN,QAA1B,EAAoC;AAChC,QAAMO,SAAS,EAAf;AACAL,WAAOC,IAAP,CAAYb,iBAAZ,EAA+Bc,OAA/B,CAAuC,iBAAS;AAC5C,YAAId,kBAAkBe,KAAlB,MAA6B,UAA7B,IAA2C,CAACL,SAASK,KAAT,CAAhD,EAAiE;AAC7DE,mBAAOC,IAAP,+BAAwCH,KAAxC;AACH;AACJ,KAJD;AAKA;AACA;AACA;;AAEA,WAAQE,OAAOE,MAAP,GAAgBF,OAAOG,IAAP,CAAY,IAAZ,CAAhB,GAAoC,IAA5C;AACH;;AAED,SAASC,eAAT,CAAyBX,QAAzB,EAAmC;AAC/B,QAAGA,SAASH,OAAZ,EAAqBG,SAASH,OAAT,GAAmB,IAAIe,IAAJ,CAASZ,SAASH,OAAlB,CAAnB;AACrB,WAAOE,gBAAgBC,QAAhB,CAAP;AACH;;AAEDa,OAAOC,OAAP,GAAiB;AACbR,sBAAkBA,gBADL,EACuB;AACpCP,qBAAiBA,eAFJ;AAGbY,qBAAiBA;AAHJ,CAAjB","file":"resource.js","sourcesContent":["'use strict';\r\nconst resourceFieldType = {\r\n    category:'required',\r\n    name:'required',\r\n    address:'optional',\r\n    phone:'optional',\r\n    website:'optional',\r\n    comments:'optional',\r\n    created:'required',\r\n    isActive:'optional',\r\n};\r\n\r\nfunction cleanupResource(resource) {\r\n    const cleanedUpResource = {};\r\n    Object.keys(resource).forEach(field => {\r\n        if (resourceFieldType[field]) cleanedUpResource[field] = resource[field];\r\n    });\r\n    return cleanedUpResource;\r\n}\r\n\r\nfunction validateResource(resource) {\r\n    const errors = [];\r\n    Object.keys(resourceFieldType).forEach(field => {\r\n        if (resourceFieldType[field] === 'required' && !resource[field]) {\r\n            errors.push(`Missing mandatory field: ${field}`);\r\n        }\r\n    });\r\n    // if (!validResouceStatus[resource.status]) {\r\n    //     errors.push(`${resource.status} is not a valid status.`);\r\n    // }\r\n\r\n    return (errors.length ? errors.join('; ') : null);\r\n};\r\n\r\nfunction convertResource(resource) {\r\n    if(resource.created) resource.created = new Date(resource.created);\r\n    return cleanupResource(resource);\r\n};\r\n\r\nmodule.exports = {\r\n    validateResource: validateResource, //property being set to validate function\r\n    cleanupResource: cleanupResource,\r\n    convertResource: convertResource,\r\n};"]}